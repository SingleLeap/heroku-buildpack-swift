#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

BIN_DIR=$(cd $(dirname $0); pwd)
ROOT_DIR=$(dirname $BIN_DIR)

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

DEFAULT_SWIFT_VERSION="3.0.1"
CLANG_VERSION=3.7.0
SWIFT_BUILD_CONFIGURATION="release"
SWIFT_BUILD_FLAGS=""

if [ -f "$ENV_DIR/SWIFT_BUILD_CONFIGURATION" ]; then
  SWIFT_BUILD_CONFIGURATION=`cat "$ENV_DIR/SWIFT_BUILD_CONFIGURATION"`
fi
if [ -f "$ENV_DIR/SWIFT_BUILD_FLAGS" ]; then
  SWIFT_BUILD_FLAGS=`cat "$ENV_DIR/SWIFT_BUILD_FLAGS"`
fi



if [ -d "$CACHE_DIR" ]; then
    if test -d "$CACHE_DIR/Packages" && (! test -f "$CACHE_DIR/clean_version" || ! cmp "$CACHE_DIR/cache_version" "$BUILD_DIR/cache_version"); then
        echo "-----> Using Package Build Cache"
        cp -r "$CACHE_DIR/Packages" "$BUILD_DIR"
        ls -l "$BUILD_DIR"
    else
        echo "Not using Package Build Cache."
    fi
fi

mkdir -p "$CACHE_DIR"

source "$BIN_DIR/utils"
source "$BIN_DIR/steps/swiftenv"
source "$BIN_DIR/steps/swift"
source "$BIN_DIR/steps/clang"
source "$BIN_DIR/steps/hooks/pre_compile"
source "$BIN_DIR/steps/swift-build"
source "$BIN_DIR/steps/swift-install"

# Setup application environment
mkdir -p $BUILD_DIR/.profile.d

set-env PATH '$HOME/.swift-bin:$PATH'
set-env LD_LIBRARY_PATH '$HOME/.swift-lib'

source "$BIN_DIR/steps/hooks/post_compile"

echo "-----> Copying Packages to Build Cache"

if [ -d "$CACHE_DIR/Packages" ]; then
    rm -fr "$CACHE_DIR/Packages"
fi

cp -r "$BUILD_DIR/Packages" "$CACHE_DIR"
if test -f "$BUILD_DIR/cache_version"; then
    cp "$BUILD_DIR/cache_version" "$CACHE_DIR/cache_version"
fi

